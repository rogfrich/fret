from pytest import raises
from fret import Fretboard as fb


def test_generate_chromatic_scale():
    fbm = fb()
    cs = fbm._generate_chromatic_scale()
    assert cs == [
        "a",
        "a#",
        "b",
        "c",
        "c#",
        "d",
        "d#",
        "e",
        "f",
        "f#",
        "g",
        "g#",
        "a",
        "a#",
        "b",
        "c",
        "c#",
        "d",
        "d#",
        "e",
        "f",
        "f#",
        "g",
        "g#",
        "a",
        "a#",
        "b",
        "c",
        "c#",
        "d",
        "d#",
        "e",
        "f",
        "f#",
        "g",
        "g#",
    ]


def test_create_create_fretboard_model_with_default_settings():
    fm = fb()
    assert fm.fretboard_model == {
        "10": "e",
        "11": "f",
        "12": "f#",
        "13": "g",
        "14": "g#",
        "15": "a",
        "16": "a#",
        "17": "b",
        "18": "c",
        "19": "c#",
        "110": "d",
        "111": "d#",
        "112": "e",
        "113": "f",
        "114": "f#",
        "115": "g",
        "116": "g#",
        "117": "a",
        "118": "a#",
        "119": "b",
        "120": "c",
        "121": "c#",
        "122": "d",
        "123": "d#",
        "124": "e",
        "20": "b",
        "21": "c",
        "22": "c#",
        "23": "d",
        "24": "d#",
        "25": "e",
        "26": "f",
        "27": "f#",
        "28": "g",
        "29": "g#",
        "210": "a",
        "211": "a#",
        "212": "b",
        "213": "c",
        "214": "c#",
        "215": "d",
        "216": "d#",
        "217": "e",
        "218": "f",
        "219": "f#",
        "220": "g",
        "221": "g#",
        "222": "a",
        "223": "a#",
        "224": "b",
        "30": "g",
        "31": "g#",
        "32": "a",
        "33": "a#",
        "34": "b",
        "35": "c",
        "36": "c#",
        "37": "d",
        "38": "d#",
        "39": "e",
        "310": "f",
        "311": "f#",
        "312": "g",
        "313": "g#",
        "314": "a",
        "315": "a#",
        "316": "b",
        "317": "c",
        "318": "c#",
        "319": "d",
        "320": "d#",
        "321": "e",
        "322": "f",
        "323": "f#",
        "324": "g",
        "40": "d",
        "41": "d#",
        "42": "e",
        "43": "f",
        "44": "f#",
        "45": "g",
        "46": "g#",
        "47": "a",
        "48": "a#",
        "49": "b",
        "410": "c",
        "411": "c#",
        "412": "d",
        "413": "d#",
        "414": "e",
        "415": "f",
        "416": "f#",
        "417": "g",
        "418": "g#",
        "419": "a",
        "420": "a#",
        "421": "b",
        "422": "c",
        "423": "c#",
        "424": "d",
        "50": "a",
        "51": "a#",
        "52": "b",
        "53": "c",
        "54": "c#",
        "55": "d",
        "56": "d#",
        "57": "e",
        "58": "f",
        "59": "f#",
        "510": "g",
        "511": "g#",
        "512": "a",
        "513": "a#",
        "514": "b",
        "515": "c",
        "516": "c#",
        "517": "d",
        "518": "d#",
        "519": "e",
        "520": "f",
        "521": "f#",
        "522": "g",
        "523": "g#",
        "524": "a",
        "60": "e",
        "61": "f",
        "62": "f#",
        "63": "g",
        "64": "g#",
        "65": "a",
        "66": "a#",
        "67": "b",
        "68": "c",
        "69": "c#",
        "610": "d",
        "611": "d#",
        "612": "e",
        "613": "f",
        "614": "f#",
        "615": "g",
        "616": "g#",
        "617": "a",
        "618": "a#",
        "619": "b",
        "620": "c",
        "621": "c#",
        "622": "d",
        "623": "d#",
        "624": "e",
    }


def test_create_fretboard_model_with_custom_tuning():
    tuning = {1: "e"}
    fm = fb(tuning=tuning)
    print(fm.fretboard_model)
    assert fm.fretboard_model == {
        "10": "e",
        "11": "f",
        "12": "f#",
        "13": "g",
        "14": "g#",
        "15": "a",
        "16": "a#",
        "17": "b",
        "18": "c",
        "19": "c#",
        "110": "d",
        "111": "d#",
        "112": "e",
        "113": "f",
        "114": "f#",
        "115": "g",
        "116": "g#",
        "117": "a",
        "118": "a#",
        "119": "b",
        "120": "c",
        "121": "c#",
        "122": "d",
        "123": "d#",
        "124": "e",
    }


def test_create_fretboard_model_with_custom_number_of_frets():
    fm = fb(number_of_frets=10)
    assert fm.number_of_frets == 10


def test_create_fretboard_model_subset():
    tuning = {
        1: "e",
        2: "b",
        3: "g",
        4: "d",
        5: "a",
        6: "e",
    }
    fm = fb()
    subset = fm.create_fretboard_model_subset(0, 3)
    correct_subset = {
        "10": "e",
        "11": "f",
        "12": "f#",
        "13": "g",
        "20": "b",
        "21": "c",
        "22": "c#",
        "23": "d",
        "30": "g",
        "31": "g#",
        "32": "a",
        "33": "a#",
        "40": "d",
        "41": "d#",
        "42": "e",
        "43": "f",
        "50": "a",
        "51": "a#",
        "52": "b",
        "53": "c",
        "60": "e",
        "61": "f",
        "62": "f#",
        "63": "g",
    }
    assert subset == correct_subset


def test_more_than_9_strings_raises_error():
    tuning = {
        1: "e",
        2: "b",
        3: "g",
        4: "d",
        5: "a",
        6: "e",
        7: "e",
        8: "b",
        9: "g",
        10: "d",
        11: "a",
        12: "e",
    }
    with raises(AssertionError):
        fm = fb(tuning=tuning)


def test_checks_for_number_of_frets():
    """
    Note: the total allowable number of frets is 25 - the open string (fret 0) plus 24 frets (frets 1 to 24)
    """
    tuning = {
        1: "e",
        2: "b",
    }
    fm_ok = fb(tuning, 25)  # Shouldn't raise exception

    with raises(AssertionError):
        fm_too_many_frets = fb(tuning, 26)  # Should raise exception
